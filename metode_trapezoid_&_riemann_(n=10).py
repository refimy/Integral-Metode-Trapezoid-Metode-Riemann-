# -*- coding: utf-8 -*-
"""metode trapezoid & riemann (n=10).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gN-TerPHIo7b14cQ6f4EX2Yr1dX7pjEX
"""

#metode trapezoid
import numpy as np
import matplotlib.pyplot as plt

def func(x):
    return (x**2)*np.exp(-x) 

a = 1.0
b = 10.0
n = 10

dx = (b-a) /(n-1) 
x = np.linspace(a, b, n) 

sigma = 0
for i in range(n-1):
    sigma = dx*func(x[i])

hasil = 0

for i in range(0-1):
    hasil += df*func(x[i])

xp = np.linspace(a, b) 
plt.plot(xp,func(xp))
for i in range (n-1):
    plt.bar(x[i], func(x[i]), align= 'edge', width = 0.000001, color = 'gray', edgecolor = 'red')
    
plt.fill_between(x,func(x),color= 'yellow')
plt.show()


#metode riemann
import numpy as np
import matplotlib.pyplot as plt
def func(x):
    return (x**2)*np.exp(-x)
a = 1.0
b = 10.0
n = 10

x = np.linspace(a,b,n)
dx = (x[-1]-x[0])/(n-1)

hasil = 0

for i in range(n-1):
    hasil += dx*func(x[i])

xp =np.linspace(a,b)
plt.plot(xp,func(xp))
for i in range (n-1):
    plt.bar(x[i],func(x[i]), align = 'edge',width=dx, color ='red', edgecolor='black')
plt.show()
print (hasil)